name: Generate Changelog

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to generate changelog for (e.g., v1.0.0)'
        required: true
        type: string
  pull_request:
    types: [closed]
    branches:
      - main

# Cancel in-progress workflow runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged == true)
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          
      # Manually manage npm cache instead of using the built-in cache
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
          
      - name: Install Conventional Changelog CLI
        run: npm install -g conventional-changelog-cli
        
      - name: Set version variable
        id: set_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "VERSION=$(date +'v%Y.%m.%d-%H%M')" >> $GITHUB_ENV
          fi
        
      - name: Generate Changelog
        run: |
          # Generate full changelog
          conventional-changelog -p angular -i CHANGELOG.md -s -r 0
          
          # Generate release-specific changelog
          conventional-changelog -p angular -o RELEASE_CHANGELOG.md
          
          # Print the changelog
          echo "Generated changelog for ${{ env.VERSION }}:"
          cat RELEASE_CHANGELOG.md
        
      - name: Create or Update Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "docs: update changelog for ${{ env.VERSION }}"
          title: "docs: update changelog for ${{ env.VERSION }}"
          body: |
            This PR updates the CHANGELOG.md with the recent changes.
            
            Generated using conventional-changelog.
          branch: update-changelog
          base: main
          delete-branch: true
          
      - name: Update Release with Changelog (workflow_dispatch only)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const changelog = fs.readFileSync('RELEASE_CHANGELOG.md', 'utf8');
            
            const tag = process.env.VERSION.startsWith('v') 
              ? process.env.VERSION 
              : `v${process.env.VERSION}`;
            
            try {
              // Get the existing release
              const { data: releases } = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              
              const release = releases.find(r => r.tag_name === tag);
              
              if (release) {
                // Update existing release
                await github.rest.repos.updateRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: release.id,
                  body: changelog
                });
                console.log(`Updated release ${tag} with changelog`);
              } else {
                console.log(`No release found for tag ${tag}`);
              }
            } catch (error) {
              console.error(`Error updating release: ${error.message}`);
            }
