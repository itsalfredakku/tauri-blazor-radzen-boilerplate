name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel in-progress workflow runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-latest]
        dotnet: ['9.0.x']

    runs-on: ${{ matrix.platform }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}
          
      # Cache NuGet packages
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/TauriBlazorBoilerplate.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        
      # Significantly improved Rust caching
      - name: Cache Rust Dependencies and Build Artifacts
        uses: actions/cache@v4
        id: rust-cache
        with:
          path: |
            ~/.cargo
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-
        
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # Try to determine the correct WebKitGTK package name for current Ubuntu version
          if apt-cache show libwebkit2gtk-4.0-dev > /dev/null 2>&1; then
            WEBKIT_DEV_PACKAGE="libwebkit2gtk-4.0-dev"
          elif apt-cache show libwebkit2gtk-4.1-dev > /dev/null 2>&1; then
            # Ubuntu 24.04 (Noble) uses WebKitGTK 4.1
            WEBKIT_DEV_PACKAGE="libwebkit2gtk-4.1-dev"
          elif apt-cache show libwebkit2gtk-6.0-dev > /dev/null 2>&1; then
            # Future Ubuntu versions might use WebKitGTK 6.0
            WEBKIT_DEV_PACKAGE="libwebkit2gtk-6.0-dev"
          else
            echo "Unable to determine WebKitGTK package name"
            exit 1
          fi
          echo "Using WebKitGTK package: $WEBKIT_DEV_PACKAGE"
          sudo apt-get install -y --no-install-recommends libgtk-3-dev $WEBKIT_DEV_PACKAGE libappindicator3-dev librsvg2-dev patchelf

      # Cache Tauri CLI installation - better caching strategy
      - name: Cache Tauri CLI
        id: cache-tauri-cli
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-tauri
          key: ${{ runner.os }}-cargo-tauri-cli-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Install Tauri CLI
        if: steps.cache-tauri-cli.outputs.cache-hit != 'true'
        run: |
          # Using --force to ensure proper installation and --debug=false to speed up
          cargo install tauri-cli --locked --force --debug=false

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Blazor WebAssembly App
        run: dotnet build -c Release --no-restore src/TauriBlazorBoilerplate.csproj

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      - name: Build Tauri Application
        env:
          # Significantly optimize Rust compilation
          CARGO_INCREMENTAL: 0
          CARGO_NET_RETRY: 10
          RUSTUP_MAX_RETRIES: 10
          CARGO_TERM_COLOR: always
          CARGO_PROFILE_DEV_DEBUG: 0
          CARGO_PROFILE_DEV_SPLIT_DEBUGINFO: "unpacked"
          CARGO_PROFILE_DEV_OPT_LEVEL: 1
          RUSTFLAGS: "-C target-cpu=native"
          # Set parallel compilation based on available cores
          CARGO_BUILD_JOBS: 4
        run: |
          # Build with optimized settings
          cargo tauri build --ci --verbose
